{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/sale-analysis/sale-analysis.component.css","webpack:///./src/app/sale-analysis/sale-analysis.component.html","webpack:///./src/app/sale-analysis/sale-analysis.component.ts","webpack:///./src/app/sales.service.ts","webpack:///./src/app/sales/sales.component.css","webpack:///./src/app/sales/sales.component.html","webpack:///./src/app/sales/sales.component.ts","webpack:///./src/app/streetsales/streetsales.component.css","webpack:///./src/app/streetsales/streetsales.component.html","webpack:///./src/app/streetsales/streetsales.component.ts","webpack:///./src/app/suggestions/suggestions.component.css","webpack:///./src/app/suggestions/suggestions.component.html","webpack:///./src/app/suggestions/suggestions.component.ts","webpack:///./src/app/wholesale/wholesale.component.css","webpack:///./src/app/wholesale/wholesale.component.html","webpack:///./src/app/wholesale/wholesale.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport {WholesaleComponent} from \"./wholesale/wholesale.component\";\r\nimport {StreetsalesComponent} from \"./streetsales/streetsales.component\";\r\nimport {SaleAnalysisComponent} from \"./sale-analysis/sale-analysis.component\";\r\nimport {SalesComponent} from \"./sales/sales.component\";\r\nimport {SuggestionsComponent} from './suggestions/suggestions.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'wholesale', component:WholesaleComponent},\r\n  { path:'streetsales',component:StreetsalesComponent},\r\n  { path:'saleAnalysis', component:SaleAnalysisComponent},\r\n  { path: 'sales', component: SalesComponent},\r\n  { path:'suggestions',component: SuggestionsComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-header (featureSelected)=\\\"onNavigate($event)\\\"></app-header>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule} from './app-routing.module';\n\nimport { HeaderComponent} from './header/header.component';\nimport { WholesaleComponent } from './wholesale/wholesale.component';\nimport { StreetsalesComponent } from './streetsales/streetsales.component';\nimport { SaleAnalysisComponent } from './sale-analysis/sale-analysis.component';\nimport { SalesComponent } from './sales/sales.component';\nimport { SuggestionsComponent } from './suggestions/suggestions.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    WholesaleComponent,\n    StreetsalesComponent,\n    SaleAnalysisComponent,\n    SalesComponent,\n    SuggestionsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n\\n\\n    <div class=\\\"collapse navbar-collapse\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/wholesale\\\">WholeSale Purchase</a></li>\\n        <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/streetsales\\\">Street Sales</a></li>\\n        <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/sales\\\"> Sales </a> </li>\\n        <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/saleAnalysis\\\">Sale Analysis</a>  </li>\\n        <li routerLinkActive=\\\"active\\\"><a routerLink=\\\"/suggestions\\\">Suggestions</a>  </li>\\n      </ul>\\n      <!--<ul class=\\\"nav navbar-nav navbar-right\\\">-->\\n        <!--&lt;!&ndash;<ng-template [ngIf]=\\\"!authService.isAuthenticated()\\\">&ndash;&gt;-->\\n          <!--&lt;!&ndash;<li><a routerLink=\\\"/signup\\\">Register</a></li>&ndash;&gt;-->\\n          <!--&lt;!&ndash;<li><a routerLink=\\\"/signin\\\">Login</a></li>&ndash;&gt;-->\\n        <!--&lt;!&ndash;</ng-template>&ndash;&gt;-->\\n\\n        <!--<li><a-->\\n          <!--style=\\\"cursor: pointer;\\\"-->\\n          <!--(click)=\\\"onLogout()\\\"-->\\n          <!--*ngIf=\\\"authService.isAuthenticated()\\\">Logout</a></li>-->\\n\\n        <!--<li class=\\\"dropdown\\\" appDropdown *ngIf=\\\"authService.isAuthenticated()\\\">-->\\n          <!--<a style=\\\"cursor: pointer;\\\" class=\\\"dropdown-toggle\\\" role=\\\"button\\\">Manage <span class=\\\"caret\\\"></span></a>-->\\n          <!--<ul class=\\\"dropdown-menu\\\">-->\\n            <!--<li><a style=\\\"cursor: pointer;\\\" (click)=\\\"onSaveData()\\\">Save Data</a></li>-->\\n            <!--<li><a style=\\\"cursor: pointer;\\\" (click)=\\\"onFetchData()\\\">Fetch Data</a></li>-->\\n          <!--</ul>-->\\n        <!--</li>-->\\n      <!--</ul>-->\\n    </div>\\n  </div>\\n</nav>\\n\"","import { Component } from '@angular/core';\nimport { Response } from '@angular/http';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent {\n  constructor(){}\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <table class=\\\"table\\\">\\n     <thead>\\n      <tr>\\n        <th>Street Name</th>\\n        <th>Best Sold Vegetable</th>\\n        <th>Quantity</th>\\n      </tr>\\n     </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let sale of salesAnalysis;\\\">\\n      <td>{{sale.streetName}}</td>\\n      <td>{{sale.vegetable}}</td>\\n      <td>{{sale.amount}}</td>\\n      </tr>\\n      </tbody>\\n    </table>\\n\\n\\n    <table class=\\\"table\\\">\\n      <thead>\\n      <tr>\\n        <th>Vegetable</th>\\n        <th>Sold</th>\\n        <th>Left</th>\\n        <th>Bought price</th>\\n        <th>Price Made</th>\\n        <th>Profit/Loss</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngFor=\\\"let sale of salesDetails;\\\">\\n        <td>{{sale.name}}</td>\\n        <td>{{sale.sold}}</td>\\n        <td>{{sale.left}}</td>\\n        <td>{{sale.boughtPrice}}</td>\\n        <td>{{sale.priceMade}}</td>\\n        <td *ngIf=\\\"sale.boughtPrice > sale.priceMade;\\\" >\\n          {{sale.boughtPrice - sale.priceMade}} Loss\\n        </td>\\n          <td *ngIf=\\\"sale.boughtPrice < sale.priceMade;\\\" >\\n            {{sale.priceMade - sale.boughtPrice}} Profit\\n          </td>\\n\\n\\n\\n      </tr>\\n      </tbody>\\n    </table>\\n\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SalesService} from \"../sales.service\";\nimport {NgForm} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-sale-analysis',\n  templateUrl: './sale-analysis.component.html',\n  styleUrls: ['./sale-analysis.component.css']\n})\nexport class SaleAnalysisComponent implements OnInit {\n\n  constructor(\n    public salesService: SalesService\n  ) { }\nsales =this.salesService.sales;\n  salesAnalysis =this.salesService.saleAnalysis;\n  salesDetails = this.salesService.saleDetails;\n\n  ngOnInit() {\n\n    }\n\n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {Subject} from \"rxjs/Subject\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SalesService {\n\n  PurchasedVegetables = [];\n  PurchasedVegetables1 = [];\n  saleDetails = [];\n  PurchasedVegitablesCost : number = 0 ;\n  sales = [];\n  saleAnalysis = [];\n  startedEditing = new Subject<number>();\n  totalSalesCost :number;\n  suggestions = [];\n\n  constructor() { }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <table class=\\\"table\\\">\\n      <thead>\\n      <tr>\\n        <th>Street Name</th>\\n        <th>Locality</th>\\n        <th>Vegetable</th>\\n        <th>Quantity</th>\\n        <th>Amount</th>\\n      </tr>\\n      </thead>\\n      <tbody *ngFor=\\\"let sale of sales;\\\">\\n      <tr>\\n        <td>{{sale.street}}</td>\\n        <td>{{sale.locality}}</td>\\n        <td></td>\\n        <td></td>\\n        <td></td>\\n\\n      <tr *ngFor=\\\" let s of sale.sale;\\\">\\n        <td></td>\\n        <td></td>\\n        <td >{{s.vegetable}}</td>\\n        <td >{{s.quantity}}</td>\\n        <td >{{s.amount}}</td>\\n      </tr>\\n\\n      </tbody>\\n\\n    </table>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SalesService} from \"../sales.service\";\n\n@Component({\n  selector: 'app-sales',\n  templateUrl: './sales.component.html',\n  styleUrls: ['./sales.component.css']\n})\nexport class SalesComponent implements OnInit {\n\n  constructor( public  salesService: SalesService) { }\n\n  sales = this.salesService.sales;\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\" >\\r\\n  <div class=\\\"col-xs-12\\\">\\r\\n    <form  #f=\\\"ngForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4 form-group\\\">\\r\\n          <label for=\\\"street\\\">Street Name</label>\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            id=\\\"street\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            name=\\\"street\\\"\\r\\n            ngModel\\r\\n            required\\r\\n          >\\r\\n        </div>\\r\\n          <div class=\\\"col-sm-4 form-group\\\">\\r\\n            <label for=\\\"locality\\\">Locality</label>\\r\\n            <input\\r\\n              type=\\\"text\\\"\\r\\n              id=\\\"locality\\\"\\r\\n              class=\\\"form-control\\\"\\r\\n              name=\\\"locality\\\"\\r\\n              ngModel\\r\\n              required\\r\\n            >\\r\\n          </div>\\r\\n      </div>\\r\\n    </form>\\r\\n    <form #f1=\\\"ngForm\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <table>\\r\\n        <div class=\\\"col-sm-4 form-group\\\">\\r\\n             <label for=\\\"type\\\">Select Vegetable &nbsp; </label>\\r\\n             <select class=\\\"form-control\\\" id=\\\"type\\\" name=\\\"name\\\" ngModel >\\r\\n               <option *ngFor=\\\"let vegetable of availableVegitables; let i = index;\\\">{{vegetable.name}}({{vegetable.amount}}) </option>\\r\\n             </select>\\r\\n         </div>\\r\\n        <div class=\\\"col-sm-4 form-group\\\">\\r\\n          <label for=\\\"quantity\\\">Quantity</label>\\r\\n          <input type=\\\"number\\\"\\r\\n                 id=\\\"quantity\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 name=\\\"quantity\\\"\\r\\n                 ngModel\\r\\n                 required>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4 form-group\\\">\\r\\n          <label for=\\\"amount\\\">Amount</label>\\r\\n          <input type=\\\"number\\\"\\r\\n                 id=\\\"amount\\\"\\r\\n                 class=\\\"form-control\\\"\\r\\n                 name=\\\"amount\\\"\\r\\n                 ngModel\\r\\n                 required\\r\\n                 >\\r\\n\\r\\n        </div>\\r\\n          <div class=\\\"col-sm-3 form-group\\\">\\r\\n            <label></label>\\r\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"add(f1)\\\" [disabled]=\\\"!f1.valid\\\">Add</button>\\r\\n          </div>\\r\\n        </table>\\r\\n      </div>\\r\\n      <div class=\\\"container\\\" >\\r\\n        <table class=\\\"table\\\">\\r\\n          <thead>\\r\\n          <tr>\\r\\n            <th>Vegetable Name</th>\\r\\n            <th>Quantity</th>\\r\\n            <th>Cost</th>\\r\\n          </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n          <tr *ngFor=\\\" let vegetable of saledetails; let i = index\\\">\\r\\n            <td>{{vegetable.vegetable}}</td>\\r\\n            <td>{{vegetable.quantity}}</td>\\r\\n            <td>{{vegetable.amount}} </td>\\r\\n          </tr>\\r\\n          <!--<tr>-->\\r\\n            <!--<td></td>-->\\r\\n            <!--<td>Todays Expenditure :</td>-->\\r\\n            <!--<td>{{TotalCost}}</td>-->\\r\\n          <!--</tr>-->\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n      &nbsp;&nbsp;\\r\\n      <div class=\\\"row\\\">\\r\\n        <button class=\\\"btn btn-success\\\"  (click)=Submit(f) [disabled]=\\\"!f.valid\\\">Save Sale</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {SalesService} from \"../sales.service\";\nimport {NgForm} from \"@angular/forms\";\nimport {NgModel} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-streetsales',\n  templateUrl: './streetsales.component.html',\n  styleUrls: ['./streetsales.component.css']\n})\nexport class StreetsalesComponent implements OnInit {\n  @ViewChild('f') slForm : NgForm;\n  @ViewChild('f1') slForm1 : NgForm;\n  constructor(  public  salesService : SalesService) { }\n\n  availableVegitables = this.salesService.PurchasedVegetables;\n  expand1 :number =0;\n  saledetails = [];\n  Sales  = this.salesService.sales;\n  totalCost = 0;\n\n  ngOnInit() {\n  }\n\n\n  add(form:NgForm){\n    var value = form.value;\n    var i = 0,j=0;\n    var val = value.name;\n    //console.log(val)\n    var n1 = val.substring(0,(val.indexOf('(') ));\n    //console.log(n1)\n    for( i = 0 ; i < this.availableVegitables.length; i++){\n      if(this.salesService.PurchasedVegetables[i].name == n1) {\n        if (this.salesService.PurchasedVegetables[i].amount >= value.quantity) {\n         // console.log(this.salesService.PurchasedVegetables1[i].amount);\n         // console.log(this.salesService.PurchasedVegetables[i].amount);\n          this.salesService.PurchasedVegetables[i].amount = this.salesService.PurchasedVegetables[i].amount - value.quantity;\n         // console.log(this.salesService.PurchasedVegetables1[i].amount);\n         // console.log(this.salesService.PurchasedVegetables[i].amount);\n        //  console.log(n1,value.quantity,value.amount);\n          if(this.saledetails.length > 0 ) {\n            for (j = 0; j < this.saledetails.length; j++) {\n              if (this.saledetails[j].vegetable == n1) {\n               // console.log(n1,value.quantity,value.amount);\n                this.saledetails[j].amount = this.saledetails[j].amount + value.amount;\n                this.saledetails[j].quantity = this.saledetails[j].quantity + value.quantity;\n                break;\n              }\n              else if (j == this.saledetails.length - 1) {\n                this.saledetails.push({vegetable: n1, quantity: value.quantity, amount: value.amount});\n                break;\n              }\n            }\n          }\n          else{\n            this.saledetails.push({vegetable:n1, quantity:value.quantity, amount:value.amount});\n\n            break;\n          }\n         // console.log(this.salesService.PurchasedVegetables1);\n         // console.log(this.salesService.PurchasedVegetables);\n         // console.log(this.saledetails);\n         // console.log(this.salesService.PurchasedVegetables1[i].amount);\n          break;\n        }\n        else {\n          alert(\"Don't have enough Quantity for this item , Available Quantity is \" + this.availableVegitables[i].amount);\n          break;\n        }\n      }\n\n\n    }\n   // console.log(amount);\n    this.slForm1.reset();\n  }\n  Submit(form: NgForm){\n    if(confirm(\"Are you sure you want to save this sale ?\")) {\n      const value = form.value;\n      //console.log(value);\n       this.salesService.sales.push({street :value.street,locality:value.locality,sale:this.saledetails});\n\n       var  i=0,j=0;\n       var  index =0,temp =0;\n       for( i =0;i< this.saledetails.length ;i++){\n         this.totalCost = this.totalCost + this.saledetails[i].amount;\n\n           if(this.saledetails[i].quantity > temp){\n             index= i;\n             temp = this.saledetails[i].quantity;\n           }\n           for(j=0;j<this.salesService.saleDetails.length;j++){\n             if(this.saledetails[i].vegetable == this.salesService.saleDetails[j].name){\n               this.salesService.saleDetails[j].left = this.salesService.saleDetails[j].left - this.saledetails[i].quantity;\n               this.salesService.saleDetails[j].sold = this.salesService.saleDetails[j].sold + this.saledetails[i].quantity;\n               this.salesService.saleDetails[j].priceMade = this.salesService.saleDetails[j].priceMade + this.saledetails[i].amount;\n               break;\n             }\n           }\n       }\n       this.salesService.totalSalesCost = this.totalCost;\n       this.salesService.saleAnalysis.push({streetName:value.street,vegetable:this.saledetails[index].vegetable,amount:this.saledetails[index].quantity});\n      // console.log(this.Sales);\n     // this.saledetails = {};\n    }\n    //console.log(this.salesService.sales.length);\n\n    this.slForm.reset();\n    this.slForm1.reset();\n    this.saledetails = [];\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\" xmlns=\\\"\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <form (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\n    Suggestion:\\n    <textarea class=\\\"form-control\\\" rows=\\\"5\\\" id=\\\"comment\\\" type=\\\"\\\"\\n              id=\\\"message\\\"\\n              class=\\\"form-control\\\"\\n              name=\\\"message\\\"\\n              ngModel\\n              required\\n    ></textarea>\\n    Date:\\n    <input type=\\\"date\\\" class=\\\"form-control\\\"\\n\\n           id=\\\"date\\\"\\n           class=\\\"form-control\\\"\\n           name=\\\"date\\\"\\n           ngModel\\n           required>\\n      <button\\n        class=\\\"btn btn-success\\\"\\n        type=\\\"submit\\\"\\n        [disabled]=\\\"!f.valid\\\">Submit</button>\\n    </form>\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {SalesService} from '../sales.service';\n\n@Component({\n  selector: 'app-suggestions',\n  templateUrl: './suggestions.component.html',\n  styleUrls: ['./suggestions.component.css']\n})\nexport class SuggestionsComponent implements OnInit {\n\n  constructor( public saleService: SalesService) { }\n\n  ngOnInit() {\n  }\n  onSubmit(form: NgForm){\n    var value = form.value;\n    this.saleService.suggestions.push(value);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <form (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-5 form-group\\\">\\n          <label for=\\\"name\\\">Vegetable Name</label>\\n          <input\\n            type=\\\"text\\\"\\n            id=\\\"name\\\"\\n            class=\\\"form-control\\\"\\n            name=\\\"name\\\"\\n            ngModel\\n            required\\n          >\\n        </div>\\n        <div class=\\\"col-sm-2 form-group\\\">\\n          <label for=\\\"amount\\\">Quantity</label>\\n          <input\\n            type=\\\"number\\\"\\n            id=\\\"amount\\\"\\n            class=\\\"form-control\\\"\\n            name=\\\"amount\\\"\\n            ngModel\\n            required\\n            pattern=\\\"^[1-9]+[0-9]*$\\\"\\n          >\\n        </div>\\n        <div class=\\\"col-sm-2 form-group\\\">\\n          <label for=\\\"amount\\\">Cost</label>\\n          <input\\n            type=\\\"number\\\"\\n            id=\\\"cost\\\"\\n            class=\\\"form-control\\\"\\n            name=\\\"cost\\\"\\n            ngModel\\n            required\\n            pattern=\\\"^[1-9]+[0-9]*$\\\"\\n          >\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n          <button\\n            class=\\\"btn btn-success\\\"\\n            type=\\\"submit\\\"\\n            [disabled]=\\\"!f.valid\\\">{{ editMode ? 'Update' : 'Add' }}</button>\\n          <button\\n            class=\\\"btn btn-danger\\\"\\n            type=\\\"button\\\"\\n            (click)=\\\"onDelete()\\\"\\n            *ngIf=\\\"editMode\\\">Delete</button>\\n          <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onClear()\\\">Clear</button>\\n        </div>\\n        <hr>\\n        <!--<ul class=\\\"list-group\\\">-->\\n          <!--<a-->\\n            <!--class=\\\"list-group-item\\\"-->\\n            <!--style=\\\"cursor: pointer\\\"-->\\n            <!--*ngFor=\\\"let vegetable of Vegetables; let i = index\\\"-->\\n            <!--(click)=\\\"onEditItem(i)\\\"-->\\n          <!--&gt;-->\\n            <!--{{ vegetable.name }} ({{ vegetable.amount }}) = {{vegetable.cost}}-->\\n          <!--</a>-->\\n        <!--</ul>-->\\n        <div class=\\\"container\\\">\\n          <table class=\\\"table\\\">\\n            <thead>\\n            <tr>\\n              <th>Vegetable Name</th>\\n              <th>Quantity</th>\\n              <th>Cost</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\" let vegetable of Vegetables; let i = index;\\\"\\n                (click)=\\\"onEditItem(i)\\\">\\n              <td>{{vegetable.name}}</td>\\n              <td>{{vegetable.amount}}</td>\\n              <td>{{vegetable.cost}} </td>\\n            </tr>\\n            <tr>\\n            <td></td>\\n            <th>Todays Expenditure :</th>\\n            <td>{{TotalCost}}</td>\\n            </tr>\\n            </tbody>\\n            <thead>\\n            <tr>\\n              <th>Suggesion of the Day:</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr>\\n              <td>{{suggestion}}</td>\\n            </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","import {Component, OnDestroy, OnInit, ViewChild,ElementRef} from '@angular/core';\n\nimport { FormBuilder, FormGroup, Validators, FormControl,NgForm } from '@angular/forms';\nimport {SalesService} from \"../sales.service\";\nimport {Subscription} from \"rxjs/Subscription\";\nimport {formatDate} from '@angular/common';\n\n@Component({\n  selector: 'app-wholesale',\n  templateUrl: './wholesale.component.html',\n  styleUrls: ['./wholesale.component.css']\n})\nexport class WholesaleComponent implements OnInit,OnDestroy {\n@ViewChild('f') slForm : NgForm;\n  Vegetables = this.salesService.PurchasedVegetables1;\n  TotalCost =  this.salesService.PurchasedVegitablesCost;\n  suggestion : string ;\n  subscription: Subscription;\n  editMode = false;\n  editedItemIndex: number;\n  editedItem = {};\n\n  constructor(\n    public salesService : SalesService,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.subscription = this.salesService.startedEditing\n      .subscribe(\n        (index: number) => {\n          this.editedItemIndex = index;\n          this.editMode = true;\n          this.slForm.setValue({\n            name: this.salesService.PurchasedVegetables[index].name,\n            amount: this.salesService.PurchasedVegetables[index].amount,\n            cost: this.salesService.PurchasedVegetables[index].cost\n          })\n        }\n      );\nthis.suggestions()\n\n  }\n  onSubmit(form:NgForm){\n    const value = form.value;\n    var name1 = value.name;\n    var cost = value.cost;\n    var amount = value.amount;\n    const value1 = form.value;\n   // this.Vegetables.push(value);\n    if(this.editMode){\n      var cost = this.salesService.PurchasedVegetables[this.editedItemIndex].cost;\n      this.salesService.PurchasedVegetables[this.editedItemIndex].name= value.name;\n      this.salesService.PurchasedVegetables1[this.editedItemIndex].name= name1;\n      this.salesService.saleDetails[this.editedItemIndex].name =name1;\n      this.salesService.PurchasedVegetables[this.editedItemIndex].amount= value.amount;\n      this.salesService.PurchasedVegetables1[this.editedItemIndex].amount= amount;\n      this.salesService.saleDetails[this.editedItemIndex].left =amount;\n      this.salesService.PurchasedVegetables[this.editedItemIndex].cost= value.cost;\n      this.salesService.PurchasedVegetables1[this.editedItemIndex].cost= cost;\n      this.salesService.saleDetails[this.editedItemIndex].boughtPrice =cost;\n      this.TotalCost = this.TotalCost - cost + this.salesService.PurchasedVegetables[this.editedItemIndex].cost;\n    }\n    else {\n      this.salesService.PurchasedVegetables.push(value);\n      this.salesService.PurchasedVegetables1.push({name:name1,amount:amount,cost:cost});\n      this.salesService.saleDetails.push({name:name1,sold:0,left:amount,boughtPrice:cost,priceMade:0});\n    //  console.log(this.salesService.saleDetails.length);\n    //  console.log(formatDate(new Date(), 'dd-MM-yyyy', 'en'));\n      this.TotalCost = this.TotalCost + value.cost;\n\n      this.salesService.PurchasedVegitablesCost = this.TotalCost;\n    }\n  }\n  onEditItem(index: number) {\n    this.salesService.startedEditing.next(index) }\n\n  suggestions(){\n\n        var date = formatDate(new Date(), 'yyyy-MM-dd', 'en');\n       // console.log(this.salesService.suggestions[0].date == date);\n\n        for( let i =0;i<this.salesService.suggestions.length;i++){\n          if(date == this.salesService.suggestions[i].date){\n           this.suggestion = this.salesService.suggestions[i].message;\n\n             break;\n          }\n        }\n\n  }\n  onClear() {\n    \n    this.editMode = false;\n  }\n\n  onDelete() {\n    this.salesService.PurchasedVegetables.splice(this.editedItemIndex,1);\n    this.salesService.PurchasedVegetables1.splice(this.editedItemIndex,1);\n    this.salesService.saleDetails.splice(this.editedItemIndex,1);\n    this.onClear();\n  }\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}